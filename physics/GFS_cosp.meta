[ccpp-table-properties]
  name = GFS_cosp
  type = scheme
  dependencies = cosp_kinds.F90,cosp/src/cosp_config.F90,cosp/src/cosp.F90,cosp/src/cosp_stats.F90,cosp/src/simulator/quickbeam/quickbeam.F90,cosp/subsample_and_optics_example/optics/quickbeam_optics/quickbeam_optics.F90

########################################################################
[ccpp-arg-table]
  name = GFS_cosp_init
  type = scheme
[me]
  standard_name = mpi_rank
  long_name = current MPI-rank
  units = index
  dimensions = ()
  type = integer
  intent = in
[nSubCol]
  standard_name = number_of_sub_columns_in_cosp
  long_name = number of subcolumns used in COSP
  units = count
  dimensions = ()
  type = integer
  intent = in
[do_cosp]
  standard_name = flag_for_cosp_diagnostics
  long_name = flag for COSP diagnostics
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_isccp]
  standard_name = flag_for_cosp_isccp_simulator
  long_name = flag for COSP ISCCP simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_modis]
  standard_name = flag_for_cosp_modis_simulator
  long_name = flag for COSP MODIS simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_misr]
  standard_name = flag_for_cosp_misr_simulator
  long_name = flag for COSP MODIS simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_cloudsat]
  standard_name = flag_for_cosp_cloudsat_radar_simulator
  long_name = flag for COSP CloudSat RADAR simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_calipso]
  standard_name = flag_for_cosp_calipso_lidar_simulator
  long_name = flag for COSP Calipso LIDAR simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_grLidar532]
  standard_name = flag_for_cosp_532nm_ground_lidar_simulator
  long_name = flag for COSP 532nm ground based LIDAR simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_atlid]
  standard_name = flag_for_cosp_earthcare_lidar_simulator
  long_name = flag for COSP EarthCare LIDAR simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_parasol]
  standard_name = flag_for_cosp_parasol_simulator
  long_name = flag for COSP Parasol simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[imp_physics]
  standard_name = control_for_microphysics_scheme
  long_name = choice of microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[imp_physics_thompson]
  standard_name = identifier_for_thompson_microphysics_scheme
  long_name = choice of Thompson microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[imp_physics_gfdl]
  standard_name = identifier_for_gfdl_microphysics_scheme
  long_name = choice of GFDL microphysics scheme
  units = flag
  dimensions = ()
  type = integer
  intent = in
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out

########################################################################
[ccpp-arg-table]
  name = GFS_cosp_run
  type = scheme
[do_cosp]
  standard_name = flag_for_cosp_diagnostics
  long_name = flag for COSP diagnostics
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_isccp]
  standard_name = flag_for_cosp_isccp_simulator
  long_name = flag for COSP ISCCP simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_modis]
  standard_name = flag_for_cosp_modis_simulator
  long_name = flag for COSP MODIS simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_misr]
  standard_name = flag_for_cosp_misr_simulator
  long_name = flag for COSP MODIS simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_cloudsat]
  standard_name = flag_for_cosp_cloudsat_radar_simulator
  long_name = flag for COSP CloudSat RADAR simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_calipso]
  standard_name = flag_for_cosp_calipso_lidar_simulator
  long_name = flag for COSP Calipso LIDAR simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_grLidar532]
  standard_name = flag_for_cosp_532nm_ground_lidar_simulator
  long_name = flag for COSP 532nm ground based LIDAR simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_atlid]
  standard_name = flag_for_cosp_earthcare_lidar_simulator
  long_name = flag for COSP EarthCare LIDAR simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[do_cosp_parasol]
  standard_name = flag_for_cosp_parasol_simulator
  long_name = flag for COSP Parasol simulator
  units = flag
  dimensions = ()
  type = logical
  intent = in
[nCol]
  standard_name = horizontal_loop_extent
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
[nLev]
  standard_name = vertical_layer_dimension
  long_name = number of vertical levels
  units = count
  dimensions = ()
  type = integer
  intent = in
[nSubCol]
  standard_name = number_of_sub_columns_in_cosp
  long_name = number of subcolumns used in COSP
  units = count
  dimensions = ()
  type = integer
  intent = in
[nLvgrid]
  standard_name = number_of_vertical_levels_in_COSP_statistical_output
  long_name = number of	vertical levels	in COSP	CloudSat and Calipso diagnostics
  units = count
  dimensions = ()
  type = integer
  intent = in
[cosp_isccp_f1]
  standard_name = COSP_ISCCP_cfad
  long_name = Grid-box fraction covered by each ISCCP D level cloud type
  units = frac
  dimensions = (horizontal_loop_extent,7,7)
  type = real
  kind = kind_phys
  intent = inout
[cosp_isccp_cldtot]
  standard_name = COSP_ISCCP_total_cloud_fraction
  long_name = COSP ISCCP total cloud fraction
  units     = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = inout
[cosp_isccp_meancldalb]
  standard_name = COSP_ISCCP_mean_cloud_albedo
  long_name = COSP ISCCP mean cloud albedo
  units     = 1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = inout
[cosp_isccp_meanptop]
  standard_name = cosp_isccp_mean_cloud_top_pressure
  long_name = COSP ISCCP mean cloud top pressure
  units     = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = inout
[cosp_isccp_meantau]
  standard_name = cosp_isccp_mean_optical_depth
  long_name = COSP ISCCP mean optical depth
  units     = 1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = inout
[cosp_isccp_meantb]
  standard_name = cosp_isccp_mean_total_sky_brightness_temperature
  long_name = COSP ISCCP mean total-sky brightness temperature
  units     = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = inout
[cosp_isccp_meantbclr]
  standard_name = cosp_isccp_mean_clear_sky_brightness_temperature
  long_name = COSP ISCCP clear-sky brightness temperature
  units     = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = inout
[cosp_isccp_tau]
  standard_name = cosp_isccp_subcolumn_optical_depth
  long_name = COSP ISCCP subcolumn optical depth
  units     = 1
  dimensions = (horizontal_loop_extent,number_of_sub_columns_in_cosp)
  type = real
  kind = kind_phys
  intent = inout
[cosp_isccp_cldptop]
  standard_name = cosp_isccp_subcolumn_cloud_top_pressure
  long_name = COSP ISCCP subcolumn cloud top pressure
  units     = Pa
  dimensions = (horizontal_loop_extent,number_of_sub_columns_in_cosp)
  type = real
  kind = kind_phys
  intent = inout
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out