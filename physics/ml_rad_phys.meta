[ccpp-table-properties]
  name = ml_rad_phys
  type = scheme
  dependencies = machine.F,funcphys.f90,radiation_gases.f

########################################################################
[ccpp-arg-table]
  name = ml_rad_phys_init
  type = scheme
[do_ml_rad]
  standard_name = flag_for_machine_learning_radiation_scheme
  long_name = flag for machine learning	radiation scheme
  units = flag
  dimensions =  ()
  type = logical
  intent = in
[infero_model_path]
  standard_name = infero_longwave_model_path
  long_name = Infero longwave radiation model path
  units = none
  dimensions = ()
  type = character
  kind = len=128
  intent = in
[infero_model_type]
  standard_name = infero_longwave_model_type
  long_name = Infero longwave radiation model type
  units = none
  dimensions = ()
  type = character
  kind = len=128
  intent = in
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out

########################################################################
[ccpp-arg-table]
  name = ml_rad_phys_finalize
  type = scheme
[do_ml_rad]
  standard_name = flag_for_machine_learning_radiation_scheme
  long_name = flag for machine learning radiation scheme
  units = flag
  dimensions =  ()
  type = logical
  intent = in
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out

########################################################################
[ccpp-arg-table]
  name = ml_rad_phys_run
  type = scheme
[do_ml_rad]
  standard_name = flag_for_machine_learning_radiation_scheme
  long_name = flag for machine learning radiation scheme
  units = flag
  dimensions =  ()
  type = logical
  intent = in
[effr_in]
  standard_name = flag_for_cloud_effective_radii
  long_name = flag for cloud effective radii calculations in GFDL microphysics
  units = flag
  dimensions = ()
  type = logical
  intent = in
[debug]
  standard_name = flag_for_machine_learning_radiation_scheme_debug_mode
  long_name = flag for debug mode machine learning radiation scheme
  units = flag
  dimensions = ()
  type = logical
  intent = in
[nCol]
  standard_name = horizontal_loop_extent
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
[nLev]
  standard_name = vertical_layer_dimension
  long_name = number of vertical levels
  units = count
  dimensions = ()
  type = integer
  intent = in
[prsi]
  standard_name = air_pressure_at_interface
  long_name = air pressure at model layer interfaces
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_interface_dimension)
  type = real
  kind = kind_phys
  intent = in
[prslk]
  standard_name = dimensionless_exner_function
  long_name = dimensionless Exner function at model layer centers
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[prsl]
  standard_name = air_pressure
  long_name = mean layer pressure
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[tgrs]
  standard_name = air_temperature
  long_name = model layer mean temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[qgrs]
  standard_name = tracer_concentration
  long_name = model layer mean tracer concentration
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,number_of_tracers)
  type = real
  kind = kind_phys
  intent = in
[cld_reice]
  standard_name = mean_effective_radius_for_ice_cloud
  long_name = mean effective radius for ice cloud
  units = m
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[cld_reliq]
  standard_name = mean_effective_radius_for_liquid_cloud
  long_name = mean effective radius for liquid cloud
  units = m
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = in
[i_cldliq]
  standard_name = index_of_cloud_liquid_water_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for cloud condensate (or liquid water)
  units = index
  dimensions = ()
  type = integer
  intent = in
[i_cldice]
  standard_name = index_of_cloud_ice_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for  ice water
  units = index
  dimensions = ()
  type = integer
  intent = in
[i_ozone]
  standard_name = index_of_ozone_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for ozone mixing ratio
  units = index
  dimensions = ()
  type = integer
  intent = in
[ico2]
  standard_name = control_for_co2
  long_name = prescribed global mean value (old opernl)
  units = flag
  dimensions = ()
  type = integer
  intent = in
[lat]
  standard_name = latitude
  long_name = latitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
[lon]
  standard_name = longitude
  long_name = longitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
[semis]
  standard_name = surface_longwave_emissivity
  long_name = surface lw emissivity in fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  intent = in
[con_eps]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants
  long_name = rd/rv
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_epsm1]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants_minus_one
  long_name = (rd/rv) - 1
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_epsqs]
  standard_name = minimum_value_of_saturation_mixing_ratio
  long_name = floor value for saturation mixing ratio
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_rd]
  standard_name = gas_constant_of_dry_air
  long_name = ideal gas constant for dry air
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_fvirt]
  standard_name = ratio_of_vapor_to_dry_air_gas_constants_minus_one
  long_name = (rv/rd) - 1 (rv = ideal gas constant for water vapor)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_g]
  standard_name = gravitational_acceleration
  long_name = gravitational acceleration
  units = m s-2
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[con_pi]
  standard_name = pi
  long_name = ratio of a circle's circumference to its diameter
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[predictor_matrix]
  standard_name = predictor_matrix_for_ML_radiation
  long_name = predictor matrix for ML radiation
  units = none
  dimensions = (number_of_predictor_variables_for_ml_radiation,number_of_levels_for_ml_radiation,number_of_cases_for_ml_radiation)
  type = real
  kind = kind_phys
  intent = in
[vector_prediction_matrix]
  standard_name = vector_prediction_matrix_for_ML_radiation
  long_name = vector prediction matrix for ML radiation
  units = none
  dimensions = (number_of_vector_target_variables_for_ml_radiation,number_of_levels_for_ml_radiation,number_of_cases_for_ml_radiation)
  type = real
  kind = kind_phys
  intent = in
[scalar_prediction_matrix]
  standard_name = scalar_prediction_matrix_for_ML_radiation
  long_name = scalar prediction	matrix for ML radiation
  units = none
  dimensions = (number_of_scalar_target_variables_for_ml_radiation,number_of_cases_for_ml_radiation)
  type = real
  kind = kind_phys
  intent = in
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
[errflg]
  standard_name = ccpp_error_code
  long_name = error code for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out